// AccessibilityProperties_as.hx:  ActionScript 3 "AccessibilityProperties" class, for Gnash.
//
// Generated by gen-as3.sh on: 20090514 by "rob". Remove this
// after any hand editing loosing changes.
//
//   Copyright (C) 2009, 2010 Free Software Foundation, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//

// This test case must be processed by CPP before compiling to include the
//  DejaGnu.hx header file for the testing framework support.

#if flash9
import flash.accessibility.AccessibilityProperties;
import flash.display.MovieClip;
#end
import flash.Lib;
import Type;
import Std;

// import our testing API
import DejaGnu;

// Class must be named with the _as suffix, as that's the same name as the file.
class AccessibilityProperties_as {
    static function main() {
        #if !flash9
		DejaGnu.note("this is not applicable to this test case. in earlier versions of flash you should call flash.accessibility.updateproperties().");
		#end
		
		#if flash9
		var x1:AccessibilityProperties = new AccessibilityProperties();

        // Make sure we actually get a valid class        
        if (x1 != null) {
            DejaGnu.pass("AccessibilityProperties class exists");
        } else {
            DejaGnu.fail("AccessibilityProperties class doesn't exist");
        }
    // Tests to see if all the properties exist. All these do is test for
    // existance of a property, and don't test the functionality at all. This
    // is primarily useful only to test completeness of the API implementation.
    if ( untyped x1.hasOwnProperty('description') ) {
	    DejaGnu.pass("AccessibilityProperties::description property exists");
	} else {
        DejaGnu.fail("AccessibilityProperties::description property doesn't exist");
	}
    if ( untyped __typeof__(x1.description) == 'string') {
        DejaGnu.pass("AccessibilityProperties.description is a string");
    } else {
        DejaGnu.fail("AccessibilityProperties.description is not a string");
    }
    
	if ( untyped x1.hasOwnProperty('forceSimple')) {
	    DejaGnu.pass("AccessibilityProperties::forceSimple property exists");
	} else {
        DejaGnu.fail("AccessibilityProperties::forceSimple property doesn't exist");
	}
    if ( untyped __typeof__(x1.forceSimple) == 'boolean') {
        DejaGnu.pass("AccessibilityProperties.forceSimple is a boolean");
    } else {
        DejaGnu.fail("AccessibilityProperties.forceSimple is not a boolean");
    }
    
	if ( untyped x1.hasOwnProperty('name')) {
	    DejaGnu.pass("AccessibilityProperties::name property exists");
	} else {
        DejaGnu.fail("AccessibilityProperties::name property doesn't exist");
	}
    if ( untyped __typeof__(x1.name) == 'string') {
        DejaGnu.pass("AccessibilityProperties.name is a string");
    } else {
        DejaGnu.fail("AccessibilityProperties.name is not a string");
    }
    
	if (untyped x1.hasOwnProperty('noAutoLabeling')) {
	    DejaGnu.pass("AccessibilityProperties::noAutoLabeling property exists");
	} else {
        DejaGnu.fail("AccessibilityProperties::noAutoLabeling property doesn't exist");
	}
    if ( untyped __typeof__(x1.noAutoLabeling) == 'boolean') {
        DejaGnu.pass("AccessibilityProperties.noAutoLabeling is a boolean");
    } else {
        DejaGnu.fail("AccessibilityProperties.noAutoLabeling is not a boolean");
    }
    
	if (untyped x1.hasOwnProperty('shortcut')) {
	    DejaGnu.pass("AccessibilityProperties::shortcut property exists");
	} else {
        DejaGnu.fail("AccessibilityProperties::shortcut property doesn't exist");
	}
    if (untyped __typeof__(x1.shortcut) == 'string') {
        DejaGnu.pass("AccessibilityProperties.shortcut is a string");
    } else {
        DejaGnu.fail("AccessibilityProperties.shortcut is not a string");
    }
    
	if (untyped x1.hasOwnProperty('silent')) {
	    DejaGnu.pass("AccessibilityProperties::silent property exists");
	} else {
        DejaGnu.fail("AccessibilityProperties::silent property doesn't exist");
	}
    if (untyped __typeof__(x1.silent) == 'boolean') {
        DejaGnu.pass("AccessibilityProperties.silent is a boolean");
    } else {
        DejaGnu.fail("AccessibilityProperties.silent is not a boolean");
    }
	#end
        // Call this after finishing all tests. It prints out the totals.
        DejaGnu.done();
    }
}

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:

