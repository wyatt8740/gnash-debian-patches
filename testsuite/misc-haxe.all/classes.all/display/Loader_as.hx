// Loader_as.hx:  ActionScript 3 "Loader" class, for Gnash.
//
// Generated by gen-as3.sh on: 20090514 by "rob". Remove this
// after any hand editing loosing changes.
//
//   Copyright (C) 2009, 2010 Free Software Foundation, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//

// This test case must be processed by CPP before compiling to include the
//  DejaGnu.hx header file for the testing framework support.

#if flash9
import flash.display.Loader;
import flash.display.MovieClip;
import flash.display.LoaderInfo;
#else
import flash.MovieClip;
#end
import flash.Lib;
import Type;
import Std;

// import our testing API
import DejaGnu;

// Class must be named with the _as suffix, as that's the same name as the file.
class Loader_as {
    static function main() {

	#if flash9
        var x1:Loader = new Loader();

        // Make sure we actually get a valid class     
	if (Std.is(x1, Loader)) {   
            DejaGnu.pass("Loader class exists");
        } else {
            DejaGnu.fail("Loader lass doesn't exist");
        }

	// Tests to see if all the properties exist. All these do is test for
	// existance of a property, and don't test the functionality at all. This
	// is primarily useful only to test completeness of the API implementation.

	// FIXME: cannot set content to load, can only get content, so test this 
	// later 
	/*if (Std.is(x1.content, DisplayObject)) {
 	    DejaGnu.pass("Loader::content property exists");
 	} else {
 	    DejaGnu.fail("Loader::content property doesn't exist");
	}*/

	if (Std.is(x1.contentLoaderInfo, LoaderInfo)) {
	    DejaGnu.pass("Loader::contentLoaderInfo property exists");
 	} else {
 	    DejaGnu.fail("Loader::contentLoaderInfo property doesn't exist");
 	}

	// Tests to see if all the methods exist. All these do is test for
	// existance of a method, and don't test the functionality at all. This
	// is primarily useful only to test completeness of the API implementation.
	if (Type.typeof(x1.close)==TFunction) {
	    DejaGnu.pass("Loader::close() method exists");
	} else {
	    DejaGnu.fail("Loader::close() method doesn't exist");
	}
	if (Type.typeof(x1.load)==TFunction) {
	    DejaGnu.pass("Loader::load() method exists");
	} else {
	    DejaGnu.fail("Loader::load() method doesn't exist");
	}
	if (Type.typeof(x1.loadBytes)==TFunction) {
	    DejaGnu.pass("Loader::loadBytes() method exists");
	} else {
	    DejaGnu.fail("Loader::loadBytes() method doesn't exist");
	}
	if (Type.typeof(x1.unload)==TFunction) {
	    DejaGnu.pass("Loader::unload() method exists");
	} else {
	    DejaGnu.fail("Loader::unload() method doesn't exist");
	}
    
#else
    DejaGnu.note("Loader did not exist in versions prior to SWF9");
#end

        // Call this after finishing all tests. It prints out the totals.
        DejaGnu.done();
    }
}

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:

