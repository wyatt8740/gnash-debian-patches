// URLRequest_as.hx:  ActionScript 3 "URLRequest" class, for Gnash.
//
// Generated by gen-as3.sh on: 20090514 by "rob". Remove this
// after any hand editing loosing changes.
//
//   Copyright (C) 2009, 2010 Free Software Foundation, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//

// This test case must be processed by CPP before compiling to include the
//  DejaGnu.hx header file for the testing framework support.

#if flash9
import flash.net.URLRequest;
import flash.display.MovieClip;
#end
import flash.Lib;
import Type;
import Std;

// import our testing API
import DejaGnu;

// Class must be named with the _as suffix, as that's the same name as the file.
class URLRequest_as {
    static function main() {
        #if !flash9
			DejaGnu.note("this test does not apply to this version of flash");
		#end
		#if flash9
		var x1:URLRequest = new URLRequest("http://www.google.com");

        // Make sure we actually get a valid class        
        if (x1 != null) {
            DejaGnu.pass("URLRequest class exists");
        } else {
            DejaGnu.fail("URLRequest class doesn't exist");
        }
// Tests to see if all the properties exist. All these do is test for
// existance of a property, and don't test the functionality at all. This
// is primarily useful only to test completeness of the API implementation.
	//unimplemented in haxe (AIR only)
// 	if (Std.is(x1.authenticate, Bool)) {
// 	    DejaGnu.pass("URLRequest.authenticate property exists");
// 	} else {
// 	    DejaGnu.fail("URLRequest.authenticate property doesn't exist");
// 	}
// 	if (Std.is(x1.cacheResponse, Bool)) {
// 	    DejaGnu.pass("URLRequest.cacheResponse property exists");
// 	} else {
// 	    DejaGnu.fail("URLRequest.cacheResponse property doesn't exist");
// 	}
	//these should be changed away from null once the class is implemented
	//to be the true content type and desired data to be pulled.
	if (x1.contentType == null) {
	    DejaGnu.pass("URLRequest.contentType property exists");
	} else {
	    DejaGnu.fail("URLRequest.contentType property doesn't exist");
	}
 	if (x1.data == null) {
 	    DejaGnu.pass("URLRequest.data property exists");
 	} else {
 	    DejaGnu.fail("URLRequest.data property doesn't exist");
 	}
	//unimplemented in haxe (AIR only)
 	//if (Std.is(x1.followRedirects, Bool)) {
 	//    DejaGnu.pass("URLRequest.followRedirects property exists");
 	//} else {
 	//    DejaGnu.fail("URLRequest.followRedirects property doesn't exist");
 	//}
 	//if (Std.is(x1.manageCookies, Bool)) {
 	//    DejaGnu.pass("URLRequest.manageCookies property exists");
 	//} else {
 	//   DejaGnu.fail("URLRequest.manageCookies property doesn't exist");
 	//}
	if (Std.is(x1.method, String)) {
	    DejaGnu.pass("URLRequest.method property exists");
	} else {
	    DejaGnu.fail("URLRequest.method property doesn't exist");
	}
 	if (Std.is(x1.requestHeaders, Array)) {
 	    DejaGnu.pass("URLRequest.requestHeaders property exists");
 	} else {
 	    DejaGnu.fail("URLRequest.requestHeaders property doesn't exist");
 	}
	if (Std.is(x1.url, String)) {
	    DejaGnu.pass("URLRequest.url property exists");
	} else {
	    DejaGnu.fail("URLRequest.url property doesn't exist");
	}
	//unimplemented in haxe (AIR only) 	
	//if (Std.is(x1.useCache, Bool)) {
 	//    DejaGnu.pass("URLRequest.useCache property exists");
	//} else {
 	//    DejaGnu.fail("URLRequest.useCache property doesn't exist");
 	//}
	//if (Std.is(x1.userAgent, String)) {
 	//    DejaGnu.pass("URLRequest.userAgent property exists");
 	//} else {
 	//    DejaGnu.fail("URLRequest.userAgent property doesn't exist");
 	//}
	#end
        // Call this after finishing all tests. It prints out the totals.
        DejaGnu.done();
    }
}

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:

