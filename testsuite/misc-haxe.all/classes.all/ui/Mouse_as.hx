// Mouse_as.hx:  ActionScript 3 "Mouse" class, for Gnash.
//
// Generated by gen-as3.sh on: 20090515 by "rob". Remove this
// after any hand editing loosing changes.
//
//   Copyright (C) 2009, 2010 Free Software Foundation, Inc.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
//

// This test case must be processed by CPP before compiling to include the
//  DejaGnu.hx header file for the testing framework support.

#if flash9
import flash.ui.Mouse;
#else
import flash.Mouse;
#end
import flash.Lib;
import Type;

// import our testing API
import DejaGnu;

// Class must be named with the _as suffix, as that's the same name as the file.
class Mouse_as {
    static function main() {
//   	DejaGnu.note("ME1 "   + Type.typeof(Mouse));	// TObject
//    	DejaGnu.note("ME2 "   + Type.getClass(Mouse));  // null
//    	DejaGnu.note("ME3 "   + Type.getSuperClass(Mouse));  // null
//   	DejaGnu.note("ME3 "   + Std.string(Mouse));	// [class Mouse]
//   	DejaGnu.note("ME4 "   + Std.is(Mouse,ValueType.TFunction));	// false
//   	DejaGnu.note("ME5 "   + Type.getClassName(Mouse));     // flash.ui.Mouse
//  	DejaGnu.note("ME6 "   + Type.getClassFields(Mouse));
//  	DejaGnu.note("ME7 "   + Type.getInstanceFields(Mouse));
	
//   	DejaGnu.note("ME8 "   + Reflect.isFunction(Mouse));
//   	DejaGnu.note("ME9 "   + Reflect.isObject(Mouse));

	if (Type.typeof(Mouse) == ValueType.TObject) {
	    DejaGnu.pass("Mouse class exists");
	} else {
	    DejaGnu.fail("Mouse class doesn't exist");
	}

	if (Type.typeof(Mouse.hide) == ValueType.TFunction) {
	    DejaGnu.pass("Mouse.hide method exists");
	} else {
	    DejaGnu.fail("Mouse.hide method doesn't exist");
	}

	if (Type.typeof(Mouse.show) == ValueType.TFunction) {
	    DejaGnu.pass("Mouse.show method exists");
	} else {
	    DejaGnu.fail("Mouse.show method doesn't exist");
	}

	DejaGnu.note("Mouse class has the following " + Type.getClassFields(Mouse));	    
// 	for (item in Type.getClassFields(Mouse)) {
// 	    if (Type.typeof(item) == ValueType.TFunction) {
// 		DejaGnu.pass("Mouse." + item + " method exists");
// 	    } else {
// 		DejaGnu.fail("Mouse." + item + " method doesn't exist");
//  	    }
// 	}
	
	// Mouse was implicitly initialized by ASBroadcaster.initialize !
	// See http://www.senocular.com/flash/tutorials/listenersasbroadcaster/?page=2
	// This adds the listeners inherited from ASBroadcaster
	// _listeners,broadcastMessage,removeListener,addListener;
	
        // Call this after finishing all tests. It prints out the totals.
        DejaGnu.done();
    }
}

// local Variables:
// mode: C++
// indent-tabs-mode: t
// End:

